{"version":3,"sources":["controller/Minesweeper.js","components/Grid.jsx","components/DisplayActionPanel.jsx","components/Bomb.jsx","components/Flag.jsx","components/Cell.jsx","components/GridItem.jsx","components/GameBoard.jsx","components/Game.jsx","App.js","index.js"],"names":["getRandomInt","min","max","Math","ceil","floor","random","Cell","number","mine","this","_flagged","_mine","_isOpen","Error","_number","throwDimensionError","d","value","getValuesAround","ary","x","y","retVal","isValidIndex","length","push","Minesweeper","width","height","mineCount","_flagCount","_mineCount","_width","_height","_startTime","Date","now","_isRunning","_timeTake","_gameActive","_won","_array","Array","fill","map","i","randWidth","randHeight","isMined","vals","mines","forEach","cell","_stopTimer","_startTimer","isFlagged","toggleFlag","allFlagged","isOpen","open","xC","yC","_seed","flat","Grid","styled","div","DisplayActionPanel","moves","time","flags","paused","onTogglePause","onNewGame","onClick","Bomb","props","viewBox","Flag","CellBase","color","SVGBase","exploded","flagged","MousePointer","span","MousePointerDefault","BombCell","FlagCell","Color","NumberCell","GridItem","onFlag","onOpen","isActive","onContextMenu","e","preventDefault","Center","GameBoard","onWin","onLose","useState","grid","setGrid","setActive","setPause","setTime","setMoves","setFlags","updateGrid","updateActivity","incrementMoves","useEffect","timer","setInterval","isTimerRunning","clearInterval","isWin","flagCount","k","toggleTimer","Game","game","setGame","delayed","setTimeout","_","alert","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAcA,SAASA,EAAaC,EAAKC,GAGvB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,EAGlD,IAAMM,EAAb,WACI,aAAgD,IAAD,yDAAJ,GAAI,IAAjCC,cAAiC,MAAxB,EAAwB,MAArBC,YAAqB,SAK3C,GAL2C,oBAC3CC,KAAKC,UAAW,EAChBD,KAAKE,OAAQ,EACbF,KAAKG,SAAU,EAEXL,EAAS,GAAKA,EAAS,EACvB,MAAM,IAAIM,MAAJ,gCAAmCN,EAAnC,6CAELC,EAGDC,KAAKE,OAAQ,EAFbF,KAAKK,QAAUP,EAV3B,yDAgCQE,KAAKC,UAAYD,KAAKC,WAhC9B,6BAoCQD,KAAKG,SAAU,IApCvB,iCAwCQ,MAAM,SAAN,OAAgBH,KAAKE,MAAQ,QAAUF,KAAKK,SAA5C,OAAsDL,KAAKC,SAAW,WAAa,GAAnF,OAxCR,6BAgBQ,OAAOD,KAAKK,UAhBpB,8BAoBQ,OAAOL,KAAKE,QApBpB,gCAwBQ,OAAOF,KAAKC,WAxBpB,6BA4BQ,OAAOD,KAAKG,YA5BpB,KA4CA,SAASG,EAAoBC,EAAGC,GAC5B,MAAM,IAAIJ,MAAJ,wBAA2BG,EAA3B,YAAgCC,EAAhC,wBAGV,SAASC,IAA2C,IAA3BC,EAA0B,uDAApB,CAAC,IAAKC,EAAc,uDAAV,EAAGC,EAAO,uDAAH,EACxCC,EAAS,GAEPC,EAAe,SAAC,GAAD,QAAGH,SAAH,MAAO,EAAP,MAAUC,SAAV,MAAc,EAAd,SAAsBD,GAAK,GAAKC,GAAK,GAAKD,EAAID,EAAIK,QAAUH,EAAIF,EAAI,GAAGK,QAmB5F,OAjBID,EAAa,CAAEH,EAAGA,EAAI,KACtBE,EAAOG,KAAKN,EAAIC,EAAI,GAAGC,IACvBE,EAAa,CAAEF,EAAGA,EAAI,KACtBC,EAAOG,KAAKN,EAAIC,GAAGC,EAAI,IACvBE,EAAa,CAAEH,EAAGA,EAAI,EAAGC,EAAGA,EAAI,KAChCC,EAAOG,KAAKN,EAAIC,EAAI,GAAGC,EAAI,IAC3BE,EAAa,CAAEH,EAAGA,EAAI,EAAGC,EAAGA,EAAI,KAChCC,EAAOG,KAAKN,EAAIC,EAAI,GAAGC,EAAI,IAC3BE,EAAa,CAAEH,EAAGA,EAAI,KACtBE,EAAOG,KAAKN,EAAIC,EAAI,GAAGC,IACvBE,EAAa,CAAEF,EAAGA,EAAI,KACtBC,EAAOG,KAAKN,EAAIC,GAAGC,EAAI,IACvBE,EAAa,CAAEH,EAAGA,EAAI,EAAGC,EAAGA,EAAI,KAChCC,EAAOG,KAAKN,EAAIC,EAAI,GAAGC,EAAI,IAC3BE,EAAa,CAAEH,EAAGA,EAAI,EAAGC,EAAGA,EAAI,KAChCC,EAAOG,KAAKN,EAAIC,EAAI,GAAGC,EAAI,IAExBC,EAGJ,IAKMI,EAAb,WACI,aAA6F,IAAD,OAAhFC,EAAgF,uDAHnE,GAGUC,EAAyD,uDAJlE,GAIkCC,EAAgC,uDAL9D,GAwB1B,GAnBwF,oBACxFpB,KAAKqB,WAAa,EAClBrB,KAAKsB,WAAaF,EAClBpB,KAAKuB,OAASL,EACdlB,KAAKwB,QAAUL,EAEfnB,KAAKyB,WAAaC,KAAKC,MACvB3B,KAAK4B,YAAa,EAClB5B,KAAK6B,UAAY,EAEjB7B,KAAK8B,aAAc,EACnB9B,KAAK+B,MAAO,EAERb,EAAQ,GACRZ,EAAoB,QAASY,GAE7BC,EAAS,GACTb,EAAoB,SAAUa,GAE9BC,GAAaF,EAAQC,EACrB,MAAM,IAAIf,MAAM,qDAEpBJ,KAAKgC,OAAS,IAAIC,MAAMf,GAAOgB,KAAK,MAAMC,KAAI,kBAAM,IAAIF,MAAMd,GAAQe,KAAK,IAAIrC,MAE/E,IAAK,IAAIuC,EAAI,EAAGA,EAAIhB,EAAWgB,IAAK,CAChC,IAAIC,EAAY/C,EAAa,EAAG4B,EAAQ,GACpCoB,EAAahD,EAAa,EAAG6B,EAAS,GAEtCnB,KAAKgC,OAAOK,GAAWC,GAAYC,QACnCH,IAEApC,KAAKgC,OAAOK,GAAWC,GAAc,IAAIzC,EAAK,CAAEE,MAAM,IAG9D,IAAK,IAAIY,EAAI,EAAGA,EAAIX,KAAKgC,OAAOjB,OAAQJ,IACpC,IADJ,eACaC,GACL,IAAI4B,EAAO/B,EAAgB,EAAKuB,OAAQrB,EAAGC,GAEvC6B,EAAQ,EACZD,EAAKE,SAAQ,SAAAC,GACLA,EAAKJ,SACLE,OAGH,EAAKT,OAAOrB,GAAGC,GAAG2B,UACnB,EAAKP,OAAOrB,GAAGC,GAAK,IAAIf,EAAK,CAAEC,OAAQ2C,MAVtC7B,EAAI,EAAGA,EAAIZ,KAAKgC,OAAO,GAAGjB,OAAQH,IAAM,EAAxCA,GApCrB,yDA4FQZ,KAAK4B,YAAa,EAClB5B,KAAK6B,WAAaH,KAAKC,MAAQ3B,KAAKyB,aA7F5C,oCAiGQzB,KAAK4B,YAAa,EAClB5B,KAAKyB,WAAaC,KAAKC,QAlG/B,oCAsGY3B,KAAK4B,YAAc5B,KAAK8B,YACxB9B,KAAK4C,aACA5C,KAAK8B,aACV9B,KAAK6C,gBAzGjB,iCA4GelC,EAAGC,GACV,OAAKZ,KAAKgC,OAAOrB,GAAGC,GAAGkC,WAAa9C,KAAKqB,WAAarB,KAAKsB,YACvDtB,KAAKgC,OAAOrB,GAAGC,GAAGmC,aAClB/C,KAAKqB,aAEDrB,KAAKqB,aAAerB,KAAKsB,aAActB,KAAKgD,eAC5ChD,KAAK+B,MAAO,EACZ/B,KAAK8B,aAAc,EACnB9B,KAAK4C,cACE,MAIJ5C,KAAKgC,OAAOrB,GAAGC,GAAGkC,YACzB9C,KAAKgC,OAAOrB,GAAGC,GAAGmC,aAClB/C,KAAKqB,cACE,KA5HnB,mCAkIQ,GAAIrB,KAAKqB,aAAerB,KAAKsB,WAAY,CACrC,IAAK,IAAIX,EAAI,EAAGA,EAAIX,KAAKgC,OAAOjB,OAAQJ,IACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,KAAKgC,OAAO,GAAGjB,OAAQH,IACvC,GAAIZ,KAAKgC,OAAOrB,GAAGC,GAAGkC,YAAc9C,KAAKgC,OAAOrB,GAAGC,GAAG2B,QAClD,OAAO,EAEnB,OAAO,EAEX,OAAO,IA1If,2BA6IS5B,EAAGC,GAAI,IAAD,OACP,GAAIZ,KAAK8B,YAAa,CAClB,IAAIa,EAAO3C,KAAKgC,OAAOrB,GAAGC,GAE1B,GAAI+B,EAAKM,QAAUN,EAAKG,UACpB,OAAO,EAEX,GAAIH,EAAKJ,QAIL,OAHAI,EAAKO,OACLlD,KAAK8B,aAAc,EACnB9B,KAAK4C,cACE,EAKX,GAFAD,EAAKO,OAEe,IAAhBP,EAAK7C,OAAc,CACnB,IAAMgB,EAAe,SAAC,GAAD,QAAGqC,UAAH,MAAQxC,EAAR,MAAWyC,UAAX,MAAgBxC,EAAhB,SAAwBuC,GAAM,GAAKC,GAAM,GAAKD,EAAK,EAAKnB,OAAOjB,QAAUqC,EAAK,EAAKpB,OAAO,GAAGjB,QAE9GD,EAAa,CAAEqC,GAAIxC,EAAI,KACvBX,KAAKkD,KAAKvC,EAAI,EAAGC,GACjBE,EAAa,CAAEsC,GAAIxC,EAAI,KACvBZ,KAAKkD,KAAKvC,EAAGC,EAAI,GACjBE,EAAa,CAAEqC,GAAIxC,EAAI,EAAGyC,GAAIxC,EAAI,KAClCZ,KAAKkD,KAAKvC,EAAI,EAAGC,EAAI,GACrBE,EAAa,CAAEqC,GAAIxC,EAAI,EAAGyC,GAAIxC,EAAI,KAClCZ,KAAKkD,KAAKvC,EAAI,EAAGC,EAAI,GACrBE,EAAa,CAAEqC,GAAIxC,EAAI,KACvBX,KAAKkD,KAAKvC,EAAI,EAAGC,GACjBE,EAAa,CAAEsC,GAAIxC,EAAI,KACvBZ,KAAKkD,KAAKvC,EAAGC,EAAI,GACjBE,EAAa,CAAEqC,GAAIxC,EAAI,EAAGyC,GAAIxC,EAAI,KAClCZ,KAAKkD,KAAKvC,EAAI,EAAGC,EAAI,GACrBE,EAAa,CAAEqC,GAAIxC,EAAI,EAAGyC,GAAIxC,EAAI,KAClCZ,KAAKkD,KAAKvC,EAAI,EAAGC,EAAI,GAG7B,OAAO,EAGX,OAAO,IArLf,2BAoDQ,OAAOZ,KAAKqD,QApDpB,2BAwDQ,OAAOrD,KAAKgC,OAAOsB,SAxD3B,+BA4DQ,OAAOtD,KAAK8B,cA5DpB,4BAgEQ,OAAO9B,KAAK+B,OAhEpB,gCAoEQ,OAAO/B,KAAKsB,aApEpB,4BAwEQ,OAAOtB,KAAKuB,SAxEpB,6BA4EQ,OAAOvB,KAAKwB,UA5EpB,gCAgFQ,OAAOxB,KAAKqB,aAhFpB,2BAoFQ,OAAOrB,KAAK6B,WAAa7B,KAAK4B,WAAaF,KAAKC,MAAQ3B,KAAKyB,WAAa,KApFlF,qCAwFQ,OAAOzB,KAAK4B,eAxFpB,K,6JChGO,IAAM2B,EAAOC,IAAOC,IAAV,KAKX,oBAAG9C,SAAH,MAAO,EAAP,4BACIA,EAAI,EAAJ,wCAAyCA,EAAzC,YAAuD,GAD3D,aCLC,SAAS+C,EAAT,GAAkG,IAApEC,EAAmE,EAAnEA,MAAOC,EAA4D,EAA5DA,KAAMxC,EAAsD,EAAtDA,UAAWyC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,UACzF,OACE,gCACE,2CAAcvE,KAAKE,MAAMiE,EAAO,KAAhC,UACA,4CAAeD,EAAf,SACA,2CAAcvC,EAAYyC,EAA1B,OACA,gCACE,wBAAQI,QAASF,EAAjB,SAAiCD,EAAS,QAAU,UACpD,wBAAQG,QAASD,EAAjB,4B,mBC+BOE,EAzCF,SAACC,GAAD,OACT,8CAAKxD,EAAE,MAAMC,EAAE,MAAMwD,QAAQ,uBAA0BD,GAAvD,cACI,4BACI,sBAAM5D,EAAE,ghBAMZ,4BACI,sBAAMA,EAAE,yIAGZ,4BACI,sBAAMA,EAAE,6IAGZ,8BACI,sBAAMA,EAAE,8FACR,sBAAMA,EAAE,8OAIZ,4BACI,sBAAMA,EAAE,wPAIZ,4BACI,sBAAMA,EAAE,0HAGZ,4BACI,sBAAMA,EAAE,kYCrBL8D,EAZF,SAACF,GAAD,OACT,6CAAKxD,EAAE,MAAMC,EAAE,MAAMwD,QAAQ,uBAA0BD,GAAvD,aACI,4BACI,sBAAM5D,EAAE,0e,wrBCEb,IAAM+D,EAAWd,IAAOC,IAAV,KAQjB,gBAAGc,EAAH,EAAGA,MAAH,OAAeA,EAAK,iBAAaA,EAAb,KAAwB,MAO1CC,EAAUhB,IAAOC,IAAV,KAIT,qBAAGgB,SAAuB,aAAkB,MAC5C,qBAAGC,QAAqB,iBAAsB,MAG5CC,EAAenB,IAAOoB,KAAV,KAIZC,EAAsBrB,IAAOoB,KAAV,KAKZ/E,EAAO2D,YAAOc,EAAPd,CAAH,KAKJsB,EAAW,SAAC,GAAD,IAAGL,EAAH,EAAGA,SAAUC,EAAb,EAAaA,QAAYP,EAAzB,6CACtB,cAACG,EAAD,2BAAcH,GAAd,aACE,cAACK,EAAD,CAASC,SAAUA,EAAUC,QAASA,EAAtC,SACE,cAAC,EAAD,UAKOK,EAAW,SAACZ,GAAD,OACtB,cAACQ,EAAD,2BAAkBR,GAAlB,aACE,cAAC,EAAD,UACE,cAACK,EAAD,UACE,cAAC,EAAD,YAMFQ,EAAQ,CACZ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWC,EAAa,SAAC,GAA0B,IAAxBnF,EAAuB,EAAvBA,OAAWqE,EAAY,0BAClD,GAAIrE,GAAU,GAAKA,EAASkF,EAAMjE,OAChC,MAAM,IAAIX,MAAJ,gCAAmCN,EAAnC,kCAAmEkF,EAAMjE,OAAzE,8BAER,OACE,cAACuD,EAAD,yBAAUC,MAAOS,EAAMlF,EAAS,IAAQqE,GAAxC,aACE,cAACU,EAAD,UAAsB/E,QC1ErB,SAASoF,EAAT,GAA6D,IAAzCvC,EAAwC,EAAxCA,KAAMhC,EAAkC,EAAlCA,EAAGC,EAA+B,EAA/BA,EAAGuE,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAC/CC,EAAgB,SAACC,GACrBJ,EAAOxE,EAAGC,GACV2E,EAAEC,kBAKJ,OAAI7C,EAAKM,SAAWoC,EACX1C,EAAKJ,QAAU,cAAC,EAAD,CAAUkC,SAAU9B,EAAKM,OAAQyB,QAAS/B,EAAKG,YAAiBH,EAAK7C,OAAS,EAAI,cAAC,EAAD,CAAYA,OAAQ6C,EAAK7C,SAAa,cAACwE,EAAD,IACvI3B,EAAKG,UACL,cAAC,EAAD,CAAUwC,cAAeA,IAGzB,cAAC,EAAD,CAAMA,cAAeA,EAAerB,QAR7B,SAACsB,GAAD,OAAOH,EAAOzE,EAAGC,M,mJCHnC,IAAM6E,EAASjC,IAAOC,IAAV,KAML,SAASiC,EAAT,GAAwD,IAAnC3F,EAAkC,EAAlCA,KAAM4F,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,OAAQ5B,EAAa,EAAbA,UAAa,EACpC6B,oBAAS,kBAAM9F,EAAK+F,QADgB,mBACrDA,EADqD,KAC/CC,EAD+C,OAE9BF,oBAAS,GAFqB,mBAErDR,EAFqD,KAE3CW,EAF2C,OAGjCH,oBAAS,GAHwB,mBAGrD/B,EAHqD,KAG7CmC,EAH6C,OAIpCJ,mBAAS,GAJ2B,mBAIrDjC,EAJqD,KAI/CsC,EAJ+C,OAKlCL,mBAAS,GALyB,mBAKrDlC,EALqD,KAK9CwC,EAL8C,OAMlCN,mBAAS,GANyB,mBAMrDhC,EANqD,KAM9CuC,EAN8C,KAQtDC,EAAa,kBAAMN,GAAQ,kBAAMhG,EAAK+F,SACtCQ,EAAiB,kBAAMN,GAAU,kBAAMjG,EAAKsF,aAE5CkB,EAAiB,kBAAMJ,GAAS,SAAAxF,GAAC,OAAIA,EAAI,MAE/C6F,qBAAU,WACRH,IACAC,IACAL,GAAS,GACTC,EAAQ,GACRC,EAAS,GACTC,EAAS,KAGR,CAACrG,IAEJyG,qBAAU,WACR,IAAIC,EAAQC,aAAY,WAClB3G,EAAK4G,gBACPT,EAAQnG,EAAK6D,QACd,KAEH,OAAO,WACLgD,cAAcH,MAEf,CAAC1G,IAEJ,IAAMoF,EAAS,SAACxE,EAAGC,GACZkD,IACHwC,IACAD,IACAE,KAEKxG,EAAKgD,WAAWpC,EAAGC,IAAMb,EAAK8G,OACjClB,IAhCoBS,GAAS,kBAAMrG,EAAK+G,eAsCxC1B,EAAS,SAACzE,EAAGC,GACZkD,IACHwC,IACAD,IACAE,IAEKxG,EAAKmD,KAAKvC,EAAGC,IAChBgF,MAaN,OACE,cAACH,EAAD,CAAQH,cAVY,SAACC,GACrBA,EAAEC,kBASF,SACE,gCACE,cAACjC,EAAD,CAAM5C,EAAG,GAAT,SACGmF,EAAK3D,KAAI,SAACQ,EAAMoE,GAAP,OAAa,cAAC7B,EAAD,CAAkBvC,KAAMA,EAAMhC,EAAGlB,KAAKE,MAAMoH,EAAI,IAAKnG,EAAGmG,EAAI,GAAI1B,SAAUA,EAAUF,OAAQA,EAAQC,OAAQA,GAA7F2B,QAExC,cAACrD,EAAD,CAAoBE,KAAMA,EAAMD,MAAOA,EAAOvC,UAAWrB,EAAKqB,UAAW0C,OAAQA,EAAQD,MAAOA,EAAOE,cAXvF,SAACwB,GACrBxF,EAAKiH,cACLf,GAAUlG,EAAK4G,iBAS0H3C,UAAWA,SClFjJ,SAASiD,IAAQ,IAAD,EACGpB,oBAAS,kBAAM,IAAI5E,EAAY,GAAI,GAAI,OAD1C,mBACdiG,EADc,KACRC,EADQ,KAGfC,EAAU,SAACzG,GAAD,OAAO0G,WAAW1G,EAAG,MAMrC,OAAO,cAAC+E,EAAD,CAAW3F,KAAMmH,EAAMvB,MAJhB,kBAAMyB,GAAQ,SAAAE,GAAC,OAAIC,MAAM,yBAA2BL,EAAKtD,KAAO,IAAO,SAIzCgC,OAH7B,kBAAMwB,GAAQ,SAAAE,GAAC,OAAIC,MAAM,6CAA+CL,EAAKtD,KAAO,IAAO,SAG9CI,UAF1C,kBAAMmD,GAAQ,kBAAM,IAAIlG,EAAY,GAAI,GAAI,UCJjDuG,MAJf,WACE,OAAO,cAACP,EAAD,K,MCCTQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.571bf91d.chunk.js","sourcesContent":["/**\r\n * Returns a random number between min (inclusive) and max (exclusive)\r\n */\r\nfunction getRandomArbitrary(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\n/**\r\n * Returns a random integer between min (inclusive) and max (inclusive).\r\n * The value is no lower than min (or the next integer greater than min\r\n * if min isn't an integer) and no greater than max (or the next integer\r\n * lower than max if max isn't an integer).\r\n * Using Math.round() will give you a non-uniform distribution!\r\n */\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport class Cell {\r\n    constructor({ number = 0, mine = false } = {}) {\r\n        this._flagged = false;\r\n        this._mine = false;\r\n        this._isOpen = false;\r\n\r\n        if (number < 0 || number > 8)\r\n            throw new Error(`Out Of Range: Number (${number}) should be in the 1 - 8 for Cell Object`)\r\n\r\n        if (!mine)\r\n            this._number = number;\r\n        else\r\n            this._mine = true;\r\n    }\r\n\r\n    get number() {\r\n        return this._number;\r\n    }\r\n\r\n    get isMined() {\r\n        return this._mine;\r\n    }\r\n\r\n    get isFlagged() {\r\n        return this._flagged;\r\n    }\r\n\r\n    get isOpen() {\r\n        return this._isOpen;\r\n    }\r\n\r\n    toggleFlag() {\r\n        this._flagged = !this._flagged;\r\n    }\r\n\r\n    open() {\r\n        this._isOpen = true;\r\n    }\r\n\r\n    toString() {\r\n        return `[Cell ${this._mine ? 'mined' : this._number}${this._flagged ? ' Flagged' : ''}]`;\r\n    }\r\n}\r\n\r\nfunction throwDimensionError(d, value) {\r\n    throw new Error(`Out of Range: ${d}(${value}) should be above 0`);\r\n}\r\n\r\nfunction getValuesAround(ary = [[]], x = 0, y = 0) {\r\n    let retVal = [];\r\n\r\n    const isValidIndex = ({ x = 0, y = 0 }) => x >= 0 && y >= 0 && x < ary.length && y < ary[0].length;\r\n\r\n    if (isValidIndex({ x: x - 1 }))\r\n        retVal.push(ary[x - 1][y]);\r\n    if (isValidIndex({ y: y - 1 }))\r\n        retVal.push(ary[x][y - 1]);\r\n    if (isValidIndex({ x: x - 1, y: y - 1 }))\r\n        retVal.push(ary[x - 1][y - 1]);\r\n    if (isValidIndex({ x: x + 1, y: y + 1 }))\r\n        retVal.push(ary[x + 1][y + 1]);\r\n    if (isValidIndex({ x: x + 1 }))\r\n        retVal.push(ary[x + 1][y]);\r\n    if (isValidIndex({ y: y + 1 }))\r\n        retVal.push(ary[x][y + 1]);\r\n    if (isValidIndex({ x: x + 1, y: y - 1 }))\r\n        retVal.push(ary[x + 1][y - 1]);\r\n    if (isValidIndex({ x: x - 1, y: y + 1 }))\r\n        retVal.push(ary[x - 1][y + 1]);\r\n\r\n    return retVal;\r\n}\r\n\r\nexport const MAX_SEED_RANGE = 10000000;\r\nexport const DEFAULT_MINE_COUNT = 10;\r\nexport const DEFAULT_HEIGHT = 10;\r\nexport const DEFAULT_WIDTH = 10;\r\n\r\nexport class Minesweeper {\r\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT, mineCount = DEFAULT_MINE_COUNT) {\r\n        this._flagCount = 0;\r\n        this._mineCount = mineCount;\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        this._startTime = Date.now();\r\n        this._isRunning = true;\r\n        this._timeTake = 0;\r\n\r\n        this._gameActive = true;\r\n        this._won = false;\r\n\r\n        if (width < 1)\r\n            throwDimensionError('width', width);\r\n\r\n        if (height < 1)\r\n            throwDimensionError('height', height);\r\n\r\n        if (mineCount >= width * height)\r\n            throw new Error(\"Mine count should be greater than the cell count!\");\r\n\r\n        this._array = new Array(width).fill(null).map(() => new Array(height).fill(new Cell()));\r\n\r\n        for (let i = 0; i < mineCount; i++) {\r\n            let randWidth = getRandomInt(0, width - 1);\r\n            let randHeight = getRandomInt(0, height - 1);\r\n\r\n            if (this._array[randWidth][randHeight].isMined)\r\n                i--;\r\n            else\r\n                this._array[randWidth][randHeight] = new Cell({ mine: true });\r\n        }\r\n\r\n        for (let x = 0; x < this._array.length; x++)\r\n            for (let y = 0; y < this._array[0].length; y++) {\r\n                let vals = getValuesAround(this._array, x, y);\r\n\r\n                let mines = 0;\r\n                vals.forEach(cell => {\r\n                    if (cell.isMined)\r\n                        mines++;\r\n                });\r\n\r\n                if (!this._array[x][y].isMined) {\r\n                    this._array[x][y] = new Cell({ number: mines });\r\n                }\r\n            }\r\n    }\r\n\r\n    get seed() {\r\n        return this._seed;\r\n    }\r\n\r\n    get grid() {\r\n        return this._array.flat();\r\n    }\r\n\r\n    get isActive() {\r\n        return this._gameActive;\r\n    }\r\n\r\n    get isWin() {\r\n        return this._won;\r\n    }\r\n\r\n    get mineCount() {\r\n        return this._mineCount;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    get flagCount() {\r\n        return this._flagCount;\r\n    }\r\n\r\n    get time() {\r\n        return this._timeTake + (this._isRunning ? Date.now() - this._startTime : 0);\r\n    }\r\n\r\n    get isTimerRunning() {\r\n        return this._isRunning;\r\n    }\r\n\r\n    _stopTimer() {\r\n        this._isRunning = false;\r\n        this._timeTake += Date.now() - this._startTime;\r\n    }\r\n\r\n    _startTimer() {\r\n        this._isRunning = true;\r\n        this._startTime = Date.now();\r\n    }\r\n\r\n    toggleTimer() {\r\n        if (this._isRunning && this._gameActive)\r\n            this._stopTimer();\r\n        else if (this._gameActive)\r\n            this._startTimer();\r\n    }\r\n\r\n    toggleFlag(x, y) {\r\n        if (!this._array[x][y].isFlagged && this._flagCount < this._mineCount) {\r\n            this._array[x][y].toggleFlag();\r\n            this._flagCount++;\r\n\r\n            if (this._flagCount === this._mineCount && this.allFlagged()) {\r\n                this._won = true;\r\n                this._gameActive = false;\r\n                this._stopTimer();\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        } else if (this._array[x][y].isFlagged) {\r\n            this._array[x][y].toggleFlag();\r\n            this._flagCount--;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    allFlagged() {\r\n        if (this._flagCount === this._mineCount) {\r\n            for (let x = 0; x < this._array.length; x++)\r\n                for (let y = 0; y < this._array[0].length; y++)\r\n                    if (this._array[x][y].isFlagged && !this._array[x][y].isMined)\r\n                        return false;\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    open(x, y) {\r\n        if (this._gameActive) {\r\n            let cell = this._array[x][y];\r\n\r\n            if (cell.isOpen || cell.isFlagged)\r\n                return false;\r\n\r\n            if (cell.isMined) {\r\n                cell.open();\r\n                this._gameActive = false;\r\n                this._stopTimer();\r\n                return false;\r\n            }\r\n\r\n            cell.open();\r\n\r\n            if (cell.number === 0) {\r\n                const isValidIndex = ({ xC = x, yC = y }) => xC >= 0 && yC >= 0 && xC < this._array.length && yC < this._array[0].length;\r\n\r\n                if (isValidIndex({ xC: x - 1 }))\r\n                    this.open(x - 1, y);\r\n                if (isValidIndex({ yC: y - 1 }))\r\n                    this.open(x, y - 1);\r\n                if (isValidIndex({ xC: x - 1, yC: y - 1 }))\r\n                    this.open(x - 1, y - 1);\r\n                if (isValidIndex({ xC: x + 1, yC: y + 1 }))\r\n                    this.open(x + 1, y + 1);\r\n                if (isValidIndex({ xC: x + 1 }))\r\n                    this.open(x + 1, y);\r\n                if (isValidIndex({ yC: y + 1 }))\r\n                    this.open(x, y + 1);\r\n                if (isValidIndex({ xC: x + 1, yC: y - 1 }))\r\n                    this.open(x + 1, y - 1);\r\n                if (isValidIndex({ xC: x - 1, yC: y + 1 }))\r\n                    this.open(x - 1, y + 1);\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}","import styled from 'styled-components';\r\n\r\nexport const Grid = styled.div`\r\n    display: grid;\r\n    gap: 2px;\r\n    width: min-content;\r\n\r\n    ${({ x = 0 }) => `\r\n        ${x > 0 ? `grid-template-columns: repeat(${x}, auto);` : ''}\r\n    `};\r\n`;","import React from 'react';\r\n\r\nexport function DisplayActionPanel({ moves, time, mineCount, flags, paused, onTogglePause, onNewGame }) {\r\n  return (\r\n    <div>\r\n      <span>Time : {Math.floor(time / 1000)}s / </span>\r\n      <span>Moves : {moves} / </span>\r\n      <span>Flags: {mineCount - flags} </span>\r\n      <div>\r\n        <button onClick={onTogglePause}>{paused ? \"start\" : \"pause\"}</button>\r\n        <button onClick={onNewGame}>New Game</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const Bomb = (props) => (\r\n    <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 397.541 397.541\" {...props} >\r\n        <g>\r\n            <path d=\"M314.211,125.461l-0.16,0.08h-40c-18.053-0.044-32.676-14.667-32.72-32.72v-43.84\r\n\t\t\tc0.144-26.907-21.551-48.836-48.458-48.981c-25.929-0.139-47.423,20.054-48.902,45.941c-0.013,0.24-0.013,0.48,0,0.72v38h-25.2\r\n\t\t\tc-8.837,0-16,7.163-16,16v35.44c5.233-1.916,10.576-3.519,16-4.8c27.184-6.492,55.68-4.823,81.92,4.8v-35.6\r\n\t\t\tc0-8.837-7.163-16-16-16h-24.72v-35.52c0-18.093,14.667-32.76,32.76-32.76c18.093,0,32.76,14.667,32.76,32.76v43.76\r\n\t\t\tc0.044,26.889,21.831,48.676,48.72,48.72h40c4.418,0,8-3.582,8-8S318.629,125.461,314.211,125.461z\"/>\r\n        </g>\r\n        <g>\r\n            <path d=\"M314.051,74.661c-4.418,0-8,3.582-8,8v25.04c0,4.418,3.582,8,8,8s8-3.582,8-8v-25.04\r\n\t\t\tC322.051,78.243,318.469,74.661,314.051,74.661z\"/>\r\n        </g>\r\n        <g>\r\n            <path d=\"M314.051,150.981c-4.418,0-8,3.582-8,8v25.04c0,4.418,3.582,8,8,8s8-3.582,8-8v-25.04\r\n\t\t\tC322.051,154.563,318.469,150.981,314.051,150.981z\"/>\r\n        </g>\r\n        <g>\r\n            <path d=\"M332.451,123.301c-0.027,0-0.053-0.003-0.08-0.004c-0.027,0-0.053,0.004-0.08,0.004H332.451z\" />\r\n            <path d=\"M354.778,91.701c-2.995-2.565-7.412-2.565-10.407,0l-17.6,17.92c-3.137,3.111-3.158,8.177-0.047,11.314\r\n\t\t\t\tc1.495,1.507,3.527,2.354,5.647,2.363c2.097-0.009,4.109-0.838,5.6-2.316l17.68-18C358.525,99.626,358.134,94.575,354.778,91.701\r\n\t\t\t\tz\"/>\r\n        </g>\r\n        <g>\r\n            <path d=\"M355.651,163.701l-17.76-17.6c-2.677-3.515-7.696-4.195-11.211-1.518c-3.515,2.677-4.195,7.696-1.518,11.211\r\n\t\t\tc0.459,0.602,1.001,1.137,1.609,1.587l17.6,17.6c3.356,2.874,8.406,2.483,11.28-0.873\r\n\t\t\tC358.216,171.114,358.216,166.696,355.651,163.701z\"/>\r\n        </g>\r\n        <g>\r\n            <path d=\"M364.851,125.541h-25.04c-4.418,0-8,3.582-8,8s3.582,8,8,8h25.04c4.418,0,8-3.582,8-8S369.269,125.541,364.851,125.541z\"\r\n            />\r\n        </g>\r\n        <g>\r\n            <path d=\"M151.971,142.981c-70.295,0-127.28,56.985-127.28,127.28c0,70.295,56.985,127.28,127.28,127.28\r\n\t\t\tc70.232,0,127.192-56.888,127.28-127.12C279.251,200.101,222.291,143.07,151.971,142.981z M136.931,368.261v0.16\r\n\t\t\tc-49.352-0.044-89.324-40.088-89.28-89.44v0c0-4.418,3.582-8,8-8s8,3.582,8,8c0.044,40.453,32.827,73.236,73.28,73.28\r\n\t\t\tc4.418,0,8,3.582,8,8S141.349,368.261,136.931,368.261z\"/>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default Bomb;","const Flag = (props) => (\r\n    <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 475.429 475.429\" {...props}>\r\n        <g>\r\n            <path d=\"M306.908,164.571l78.89-86.204c2.121-2.236,2.734-5.507,1.567-8.359c-1.367-2.812-4.189-4.626-7.314-4.702H126.663\r\n\t\t\tc0,0-3.135,0-3.135,0.522v-9.404c13.393-2.134,22.926-14.163,21.943-27.69C145.474,13.067,132.925,0.285,117.259,0\r\n\t\t\tc-16.047-0.01-29.217,12.697-29.78,28.735c0.536,12.512,8.589,23.456,20.375,27.69v411.167c0,4.328,3.509,7.837,7.837,7.837\r\n\t\t\ts7.837-3.509,7.837-7.837V263.837h256.522c3.206,0.209,6.174-1.698,7.314-4.702c1.04-2.864,0.439-6.067-1.567-8.359\r\n\t\t\tL306.908,164.571z\"/>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default Flag;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Bomb from './Bomb';\r\nimport Flag from './Flag';\r\n\r\nexport const CellBase = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  display: grid;\r\n  place-content: center;\r\n\r\n  border: dashed 0.5px rgba(0, 0, 0, 0.4);\r\n\r\n  ${({ color }) => color ? `color: ${color};` : ''}\r\n\r\n  &:hover{\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n\r\nconst SVGBase = styled.div`\r\n  width: 25px;\r\n  height: 25px;\r\n\r\n  ${({ exploded }) => exploded ? `fill: red;` : ''}\r\n  ${({ flagged }) => flagged ? `fill: #00e676;` : ''}\r\n`;\r\n\r\nconst MousePointer = styled.span`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst MousePointerDefault = styled.span`\r\n  cursor: default;\r\n  user-select:none;\r\n`;\r\n\r\nexport const Cell = styled(CellBase)`\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const BombCell = ({ exploded, flagged, ...props }) => (\r\n  <CellBase {...props}>\r\n    <SVGBase exploded={exploded} flagged={flagged}>\r\n      <Bomb />\r\n    </SVGBase>\r\n  </CellBase>\r\n);\r\n\r\nexport const FlagCell = (props) => (\r\n  <MousePointer {...props}>\r\n    <Cell>\r\n      <SVGBase>\r\n        <Flag />\r\n      </SVGBase>\r\n    </Cell>\r\n  </MousePointer>\r\n);\r\n\r\nconst Color = [\r\n  '#00e676',\r\n  '#e6d53f',\r\n  '#ff5722',\r\n  '#00b0ff',\r\n  '#651fff',\r\n  '#ff1744',\r\n  '#6a1b9a',\r\n  '#2e7d32'\r\n];\r\n\r\nexport const NumberCell = ({ number, ...props }) => {\r\n  if (number <= 0 || number > Color.length)\r\n    throw new Error(`Out Of Range: Number (${number}) should be in the 1 - ${Color.length} for NumberCell Component`);\r\n\r\n  return (\r\n    <CellBase color={Color[number - 1]} {...props}>\r\n      <MousePointerDefault>{number}</MousePointerDefault>\r\n    </CellBase>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BombCell, Cell, FlagCell, NumberCell, CellBase } from './Cell';\r\n\r\nexport function GridItem({ cell, x, y, onFlag, onOpen, isActive }) {\r\n  const onContextMenu = (e) => {\r\n    onFlag(x, y);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onClick = (e) => onOpen(x, y);\r\n\r\n  if (cell.isOpen || !isActive)\r\n    return cell.isMined ? <BombCell exploded={cell.isOpen} flagged={cell.isFlagged} /> : (cell.number > 0 ? <NumberCell number={cell.number} /> : <CellBase />);\r\n  else if (cell.isFlagged)\r\n    return <FlagCell onContextMenu={onContextMenu} />;\r\n\r\n  else\r\n    return <Cell onContextMenu={onContextMenu} onClick={onClick} />;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid } from './Grid';\r\nimport { DisplayActionPanel } from './DisplayActionPanel';\r\nimport { GridItem } from './GridItem';\r\nimport styled from 'styled-components';\r\n\r\nconst Center = styled.div`\r\n  display: grid;  \r\n  place-content: center;\r\n  height: max(524px, 100vh);\r\n`;\r\n\r\nexport function GameBoard({ mine, onWin, onLose, onNewGame }) {\r\n  const [grid, setGrid] = useState(() => mine.grid);\r\n  const [isActive, setActive] = useState(true);\r\n  const [paused, setPause] = useState(false);\r\n  const [time, setTime] = useState(0);\r\n  const [moves, setMoves] = useState(0);\r\n  const [flags, setFlags] = useState(0);\r\n\r\n  const updateGrid = () => setGrid(() => mine.grid);\r\n  const updateActivity = () => setActive(() => mine.isActive);\r\n  const updateFlags = () => setFlags(() => mine.flagCount);\r\n  const incrementMoves = () => setMoves(x => x + 1);\r\n\r\n  useEffect(() => {\r\n    updateGrid();\r\n    updateActivity();\r\n    setPause(false);\r\n    setTime(0);\r\n    setMoves(0);\r\n    setFlags(0);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [mine]);\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      if (mine.isTimerRunning)\r\n        setTime(mine.time);\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [mine]);\r\n\r\n  const onFlag = (x, y) => {\r\n    if (!paused) {\r\n      updateActivity();\r\n      updateGrid();\r\n      incrementMoves();\r\n\r\n      if (!mine.toggleFlag(x, y) && mine.isWin)\r\n        onWin();\r\n\r\n      updateFlags();\r\n    }\r\n  };\r\n\r\n  const onOpen = (x, y) => {\r\n    if (!paused) {\r\n      updateActivity();\r\n      updateGrid();\r\n      incrementMoves();\r\n\r\n      if (!mine.open(x, y))\r\n        onLose();\r\n    }\r\n  };\r\n\r\n  const onContextMenu = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onTogglePause = (e) => {\r\n    mine.toggleTimer();\r\n    setPause(!mine.isTimerRunning);\r\n  };\r\n\r\n  return (\r\n    <Center onContextMenu={onContextMenu}>\r\n      <div>\r\n        <Grid x={10}>\r\n          {grid.map((cell, k) => <GridItem key={k} cell={cell} x={Math.floor(k / 10)} y={k % 10} isActive={isActive} onFlag={onFlag} onOpen={onOpen} />)}\r\n        </Grid>\r\n        <DisplayActionPanel time={time} moves={moves} mineCount={mine.mineCount} paused={paused} flags={flags} onTogglePause={onTogglePause} onNewGame={onNewGame} />\r\n      </div>\r\n    </Center>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Minesweeper } from '../controller/Minesweeper';\r\nimport { GameBoard } from './GameBoard';\r\n\r\nexport function Game() {\r\n  const [game, setGame] = useState(() => new Minesweeper(10, 10, 10));\r\n\r\n  const delayed = (x) => setTimeout(x, 300);\r\n\r\n  const onWin = () => delayed(_ => alert(\"You WON!\\nTime Taken: \" + game.time / 1000 + \"s\"));\r\n  const onLose = () => delayed(_ => alert(\"Sorry Better luck next time!\\nTime Taken: \" + game.time / 1000 + \"s\"));\r\n  const onNewGame = () => setGame(() => new Minesweeper(10, 10, 10));\r\n\r\n  return <GameBoard mine={game} onWin={onWin} onLose={onLose} onNewGame={onNewGame} />;\r\n}\r\n","import React from 'react';\r\nimport { Game } from './components/Game';\r\n\r\nfunction App() {\r\n  return <Game />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}